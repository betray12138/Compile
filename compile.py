# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'compile.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 900)
        MainWindow.setMouseTracking(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMouseTracking(True)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(0, 750, 1201, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.textBrowser.setFont(font)
        self.textBrowser.setMouseTracking(True)
        self.textBrowser.setObjectName("textBrowser")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(20, 20, 541, 711))
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.textEdit.setFont(font)
        self.textEdit.setMouseTracking(True)
        self.textEdit.setObjectName("textEdit")
        self.textout = QtWidgets.QTextBrowser(self.centralwidget)
        self.textout.setGeometry(QtCore.QRect(720, 20, 451, 711))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.textout.setFont(font)
        self.textout.setObjectName("textout")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        icon = QtGui.QIcon.fromTheme("image.qrc")
        self.menu.setIcon(icon)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setMouseTracking(True)
        self.menu_2.setObjectName("menu_2")
        self.do_lexer_analysis = QtWidgets.QMenu(self.menu_2)
        self.do_lexer_analysis.setObjectName("do_lexer_analysis")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menu_5 = QtWidgets.QMenu(self.menubar)
        self.menu_5.setObjectName("menu_5")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setMouseTracking(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMouseTracking(True)
        self.toolBar.setTabletTracking(True)
        self.toolBar.setMovable(False)
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.open = QtWidgets.QAction(MainWindow)
        self.open.setShortcutVisibleInContextMenu(True)
        self.open.setObjectName("open")
        self.single_step = QtWidgets.QAction(MainWindow)
        self.single_step.setObjectName("single_step")
        self.many_steps = QtWidgets.QAction(MainWindow)
        self.many_steps.setObjectName("many_steps")
        self.run_all = QtWidgets.QAction(MainWindow)
        self.run_all.setObjectName("run_all")
        self.clear_all = QtWidgets.QAction(MainWindow)
        self.clear_all.setObjectName("clear_all")
        self.actioninput = QtWidgets.QAction(MainWindow)
        self.actioninput.setObjectName("actioninput")
        self.actionconfirm = QtWidgets.QAction(MainWindow)
        self.actionconfirm.setObjectName("actionconfirm")
        self.focus = QtWidgets.QAction(MainWindow)
        self.focus.setObjectName("focus")
        self.actiondo_parser_analysis = QtWidgets.QAction(MainWindow)
        self.actiondo_parser_analysis.setObjectName("actiondo_parser_analysis")
        self.actionsave = QtWidgets.QAction(MainWindow)
        self.actionsave.setObjectName("actionsave")
        self.actiondo_gen_inter_code = QtWidgets.QAction(MainWindow)
        self.actiondo_gen_inter_code.setObjectName("actiondo_gen_inter_code")
        self.actiongen_object_code = QtWidgets.QAction(MainWindow)
        self.actiongen_object_code.setObjectName("actiongen_object_code")
        self.menu.addAction(self.open)
        self.menu.addAction(self.focus)
        self.menu.addAction(self.actionsave)
        self.do_lexer_analysis.addSeparator()
        self.do_lexer_analysis.addAction(self.single_step)
        self.do_lexer_analysis.addAction(self.many_steps)
        self.do_lexer_analysis.addAction(self.run_all)
        self.menu_2.addAction(self.do_lexer_analysis.menuAction())
        self.menu_2.addAction(self.clear_all)
        self.menu_3.addAction(self.actiondo_parser_analysis)
        self.menu_4.addAction(self.actiondo_gen_inter_code)
        self.menu_5.addAction(self.actiongen_object_code)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.menubar.addAction(self.menu_5.menuAction())
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Compile"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "词法分析"))
        self.do_lexer_analysis.setTitle(_translate("MainWindow", "do lexer analysis"))
        self.menu_3.setTitle(_translate("MainWindow", "语法分析"))
        self.menu_4.setTitle(_translate("MainWindow", "中间代码生成"))
        self.menu_5.setTitle(_translate("MainWindow", "目标代码生成"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.open.setText(_translate("MainWindow", "open"))
        self.open.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.single_step.setText(_translate("MainWindow", "run single"))
        self.single_step.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.many_steps.setText(_translate("MainWindow", "run many"))
        self.many_steps.setShortcut(_translate("MainWindow", "Ctrl+Alt+M"))
        self.run_all.setText(_translate("MainWindow", "run all..."))
        self.run_all.setShortcut(_translate("MainWindow", "Ctrl+Alt+A"))
        self.clear_all.setText(_translate("MainWindow", "clear all"))
        self.clear_all.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.actioninput.setText(_translate("MainWindow", "input"))
        self.actioninput.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionconfirm.setText(_translate("MainWindow", "confirm"))
        self.actionconfirm.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.focus.setText(_translate("MainWindow", "input"))
        self.focus.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actiondo_parser_analysis.setText(_translate("MainWindow", "do parser analysis"))
        self.actiondo_parser_analysis.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionsave.setText(_translate("MainWindow", "save"))
        self.actionsave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actiondo_gen_inter_code.setText(_translate("MainWindow", "do gen inter-code"))
        self.actiondo_gen_inter_code.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actiongen_object_code.setText(_translate("MainWindow", "gen_object_code"))
